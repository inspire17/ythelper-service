# Server details
company.name=${company_name}
company.logo=${company_logo}
spring.application.name=yt-upload-helper
server.servlet.context-path=/api
# Database
spring.datasource.url=jdbc:postgresql://localhost:5432/ytfw
spring.datasource.username=postgres
spring.datasource.password=amma
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jwt.secret="asdfdwdesdvdbsbfdbxcbdfbgnhjmkilopihgssvsvfe"
spring.jwt.token-validity=36000000
# Enable Spring Web debug logs
logging.level.org.springframework.web=DEBUG
# Enable logs for requests handled by DispatcherServlet
logging.level.org.springframework.web.servlet.DispatcherServlet=DEBUG
# Log all application-level requests
logging.level.org.springframework.boot.web.servlet=DEBUG
logging.level.org.springframework.security=DEBUG
# Gmail SMTP Settings
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=ytemailtestuser@gmail.com
spring.mail.password=
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.ssl.trust=smtp.gmail.com
spring.mail.from=ytemailtestuser@gmail.com
# Redis
spring.redis.host=${redis_host}
spring.redis.port=${redis_port}
spring.redis.password=${redis_pass}
# Mongo
spring.data.mongodb.uri=mongodb://admin:secret@localhost:27017/yt_helper?authSource=admin
#spring.data.mongodb.host=localhost
#spring.data.mongodb.port=27017
#spring.data.mongodb.database=yt_helper
#spring.data.mongodb.username=admin
#spring.data.mongodb.password=secret
#spring.data.mongodb.authentication-database=admin
# Swagger
springdoc.api-docs.enabled=true
springdoc.swagger-ui.enabled=true
springdoc.swagger-ui.path=/swagger-ui.html
# Options: AWS_S3, GCP_BUCKET, HOST_MACHINE
storage.env=HOST_MACHINE
video.local.path=C:\\Users\\dev_a\\IdeaProjects\\yt-upload-helper\\videos
audio.local.path=C:\\Users\\dev_a\\IdeaProjects\\yt-upload-helper\\audios
# S3
aws.s3.bucket.name=my-yt-helper-bucket
aws.s3.region=${AWS_REGION}
aws.accessKey=${AWS_ACCESS_KEY}
aws.secretKey=${AWS_SECRET_KEY}
# GCP
gcp.storage.bucket.name=my-yt-helper-bucket
gcp.project.id=${GOOGLE_PROJECT_ID}
gcp.credentials.path=${GOOGLE_APPLICATION_CREDENTIALS}
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=50GB
spring.servlet.multipart.max-request-size=50GB
# To Tomcat to reject uploading large file
server.tomcat.max-swallow-size=-1 
server.tomcat.connection-timeout=60000
server.servlet.session.timeout=1h
spring.mvc.async.request-timeout=60000